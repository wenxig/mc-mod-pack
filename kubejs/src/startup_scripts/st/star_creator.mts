
GTCEuStartupEvents.registry('gtceu:machine', event => {
  const r = event.create('kubejs_star_creator', 'multiblock') as any as Internal.MultiblockMachineBuilder
  r.rotationState(RotationState.NON_Y_AXIS)
  r.pattern(definition => FactoryBlockPattern.start()
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '######BBBBBBBBB######', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '######AAAAAAAAA######', '####BB#########BB####', '######AAAAAAAAA######', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#######AAAAAAA#######', '######AAAAAAAAA######', '####AADDDEEEDDDAA####', '###B##BBBEEEBBB##B###', '####AADDDEEEDDDAA####', '######AAAAAAAAA######', '#######AAAAAAA#######', '#####################', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '########AAAAA########', '#########EEE#########', '####AA###EEE###AA####', '###ADD#########DDA###', '##B#BB#########BB#B##', '###ADD#########DDA###', '####AA###EEE###AA####', '#########EEE#########', '########AAAAA########', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#########AAA#########', '#########EEE#########', '#####################', '###A#############A###', '##AD#############DA##', '#B#B#############B#B#', '##AD#############DA##', '###A#############A###', '#####################', '#########EEE#########', '#########AAA#########', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#########AAA#########', '#########EEE#########', '#####################', '#####################', '###A#############A###', '##AD#############DA##', '#B#B#############B#B#', '##AD#############DA##', '###A#############A###', '#####################', '#####################', '#########EEE#########', '#########AAA#########', '#####################', '#####################')
    .aisle('#####################', '#####################', '#########AAA#########', '########FEEEF########', '#####################', '#####################', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '#####################', '#####################', '########FEEEF########', '#########AAA#########', '#####################', '#####################')
    .aisle('#####################', '#########AAA#########', '########AGGGA########', '#######FFFFFFF#######', '#################A###', '##A###############A##', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '##A###############A##', '#####################', '#######FFFFFFF#######', '########AGGGA########', '#########AAA#########', '#####################')
    .aisle('##########A##########', '########AAHAA########', '#######AGGGGGA#######', '######FFFIIIFFF#A####', '###A#############A###', '##A###############A##', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '##A###############A##', '###A#############A###', '######FFFIIIFFF######', '#######AGGGGGA#######', '########AAHAA########', '##########A##########')
    .aisle('#########AAA#########', '#######AAHHHAA#######', '#####AAGGGGGGGAA#####', '####AEEFIFFFIFEEA####', '###AE###########EA###', '##AE#############EA##', '##AE#############EA##', '#AE###############EA#', 'B#E###############E#B', '#AE###############EA#', '##AE#############EA##', '##AE#############EA##', '###AE###########EA###', '####AEEFIFFFIFEEA####', '#####AAGGGGGGGAA#####', '#######AAHHHAA#######', '#########AAA#########')
    .aisle('########AAAAA########', '#######AHHHHHA#######', '#####AAGGGGGGGAA#####', '####AEEFIFJFIFEEA####', '###AE#####J#####EA###', '##AE#############EA##', '##AE#############EA##', '#AE###############EA#', 'B#E###############E#B', '#AE###############EA#', '##AE#############EA##', '##AE#############EA##', '###AE#####J#####EA###', '####AEEFIFJFIFEEA####', '#####AAGGGGGGGAA#####', '#######AHHHHHA#######', '########AAKAA########')
    .aisle('#########AAA#########', '#######AAHHHAA#######', '#####AAGGGGGGGAA#####', '####AEEFIFFFIFEEA####', '###AE###########EA###', '##AE#############EA##', '##AE#############EA##', '#AE###############EA#', 'B#E###############E#B', '#AE###############EA#', '##AE#############EA##', '##AE#############EA##', '###AE###########EA###', '####AEEFIFFFIFEEA####', '#####AAGGGGGGGAA#####', '#######AAHHHAA#######', '#########AAA#########')
    .aisle('##########A##########', '########AAHAA########', '#######AGGGGGA#######', '######FFFIIIFFF#A####', '###A#############A###', '##A###############A##', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '##A###############A##', '###A#############A###', '######FFFIIIFFF######', '#######AGGGGGA#######', '########AAHAA########', '##########A##########')
    .aisle('#####################', '#########AAA#########', '########AGGGA########', '#######FFFFFFF#######', '#################A###', '##A###############A##', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '##A###############A##', '#####################', '#######FFFFFFF#######', '########AGGGA########', '#########AAA#########', '#####################')
    .aisle('#####################', '#####################', '#########AAA#########', '########FEEEF########', '#####################', '#####################', '##A###############A##', '#AD###############DA#', 'B#B###############B#B', '#AD###############DA#', '##A###############A##', '#####################', '#####################', '########FEEEF########', '#########AAA#########', '#####################', '#####################')
    .aisle('#####################', '#####################', '#########AAA#########', '#########EEE#########', '#####################', '#####################', '###A#############A###', '##AD#############DA##', '#B#B#############B#B#', '##AD#############DA##', '###A#############A###', '#####################', '#####################', '#########EEE#########', '#########AAA#########', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#########AAA#########', '#########EEE#########', '#####################', '###A#############A###', '##AD#############DA##', '#B#B#############B#B#', '##AD#############DA##', '###A#############A###', '#####################', '#########EEE#########', '#########AAA#########', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '########AAAAA########', '#########EEE#########', '####AA###EEE###AA####', '###ADD#########DDA###', '##B#BB#########BB#B##', '###ADD#########DDA###', '####AA###EEE###AA####', '#########EEE#########', '########AAAAA########', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#######AAAAAAA#######', '######AAAAAAAAA######', '####AADDDEEEDDDAA####', '###B##BBBEEEBBB##B###', '####AADDDEEEDDDAA####', '######AAAAAAAAA######', '#######AAAAAAA#######', '#####################', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '######AAAAAAAAA######', '####BB#########BB####', '######AAAAAAAAA######', '########AAAAA########', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################')
    .aisle('#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '######BBBBBBBBB######', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################', '#####################')
    .where('K', Predicates.controller(Predicates.blocks(definition.get())))
    .where('G', Predicates.blocks('draconicevolution:awakened_draconium_block'))
    .where('B', Predicates.blocks('gtceu:neutronium_frame'))
    .where('I', Predicates.blocks('nuclearcraft:californium250_block'))
    .where('E', Predicates.blocks('gtceu:neutronium_block'))
    .where('A', Predicates.blocks(GTBlocks.MACHINE_CASING_UEV.get())
      .or(Predicates.abilities(
        PartAbility.IMPORT_ITEMS,
        PartAbility.EXPORT_ITEMS,
        PartAbility.IMPORT_FLUIDS,
        PartAbility.EXPORT_FLUIDS,
        PartAbility.COMPUTATION_DATA_RECEPTION,
        PartAbility.INPUT_ENERGY,
        PartAbility.INPUT_LASER
      ))
      .or(Predicates.autoAbilities(GTRecipeTypes.get('kubejs_creating_star')))
    )
    .where('H', Predicates.blocks('gtceu:uranium_rhodium_dinaquadide_block'))
    .where('J', Predicates.blocks('avaritia:infinity'))
    .where('F', Predicates.blocks('avaritia:neutron'))
    .where('D', Predicates.blocks('mekanism_extras:naquadah_reactor_casing'))
    .where('#', Predicates.any())
    .build()
  ).recipeTypes([GTRecipeTypes.get('kubejs_creating_star')])
  r.langValue('block.gtceu.kubejs_star_creator')
})

GTCEuStartupEvents.registry('gtceu:recipe_type', e => {
  // create() 方法返回 com.gregtechceu.gtceu.integration.kjs.builders.GTRecipeTypeBuilder
  (e as any).create('kubejs_creating_star')
    .setEUIO('in')
    .setMaxIOSize(3, 9, 3, 9)
    .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
    .setSound(GTSoundEntries.CENTRIFUGE)
})
